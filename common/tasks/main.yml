---
    - name: Install base packages
      ansible.builtin.apt:
        update_cache: yes
        name: ['curl','git', 'bash-completion', 'vnstat', 'htop', 'iotop']
        state: latest

    - name: Copy over vnstat config
      ansible.builtin.copy:
         src: "../files/vnstat.conf"
         dest: "/etc/vnstat.conf"
         owner: "root"
         group: "vnstat"
         mode: 0644
      register: vnstatconf

    - name: Restart vnstat if config is updated
      ansible.builtin.service:
        name: vnstat
        state: restarted
      when: vnstatconf.changed

    - name: Ensure vnstat is started
      ansible.builtin.service:
        name: vnstat
        state: started

    - name: Ensure hostname set
      ansible.builtin.hostname: 
        name: "{{ inventory_hostname }}"
      when: not inventory_hostname|trim is match('(\d{1,3}\.){3}\d{1,3}')

    - name: Ensure hostname is in /etc/hosts
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: "^{{ ansible_default_ipv4.address }}.+$"
        line: "{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"

    - name: Ensure my group exists
      ansible.builtin.group:
       name: "{{ my_user }}"
       state: present
       gid: "{{ my_id }}"

    - name: Ensure my user exists
      ansible.builtin.user:
       comment: "Created by Ansible"
       name: "{{ my_user }}"
       password: "{{my_password | password_hash('sha512')}}"
       uid: "{{ my_id }}"
       groups: "{{ my_user }},sudo"
       append: yes
       shell: /bin/bash

    - name: Set root password
      ansible.builtin.user:
       name: "root"
       password: "{{root_password | password_hash('sha512')}}"
       
    - name: Add custom sudoers file
      ansible.builtin.template:
        src: "../files/custom-sudoers.j2"
        dest: "/etc/sudoers.d/custom-sudoers"
        owner: "root"
        group: "root"
        mode: 0640
        validate: /usr/sbin/visudo -cf %s

    - name: Copy over sshd_config file
      ansible.builtin.copy:
        src: "../files/sshd_config"
        dest: "/etc/ssh/sshd_config"
        backup: yes
        owner: "root"
        group: "root"
        mode: 0644
        validate: /usr/sbin/sshd -T -f %s
      notify:
      - restart sshd